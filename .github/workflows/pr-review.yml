name: Generate PDF for Review

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]
    paths:
      - '**.typ'

jobs:
  generate-pdf-for-review:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Typst
      uses: typst-community/setup-typst@v3

    - name: Compile Typst document
      run: |
        typst compile main.typ template.pdf

    - name: Upload PDF as artifact
      uses: actions/upload-artifact@v4
      with:
        name: template-pdf-review
        path: template.pdf
        retention-days: 30

    - name: Comment PDF on PR
      uses: actions/github-script@v7
      with:
        script: |
          let prNumber = null;

          // If this is a direct PR event
          if (context.eventName === 'pull_request') {
            prNumber = context.payload.pull_request.number;
          }
          // If this is a push event, find associated PR
          else if (context.eventName === 'push') {
            const branchName = context.ref.replace('refs/heads/', '');
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branchName}`,
              state: 'open'
            });
            if (pulls.length > 0) {
              prNumber = pulls[0].number;
            }
          }

          // Comment on PR if found
          if (prNumber) {
            // Get the artifact download URL
            const { data: artifacts } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

            const pdfArtifact = artifacts.artifacts.find(artifact =>
              artifact.name === 'template-pdf-review'
            );

            // Direct download URL for the artifact zip (API endpoint)
            const artifactUrl = pdfArtifact
              ? `https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/actions/artifacts/${pdfArtifact.id}/zip`
              : `${context.payload.repository.html_url}/actions/runs/${context.runId}`;

            const comment = `ðŸ“„ **PDF Generated Successfully for Review!**

            The latest PDF has been compiled and is ready for review.

            **Direct download (artifact .zip):** [Download artifact](${artifactUrl})

            Alternative: View all [workflow artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})

            Commit: ${context.sha.substring(0, 7)}`;

            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
